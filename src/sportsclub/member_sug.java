/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sportsclub;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Faris
 */
public class member_sug extends javax.swing.JInternalFrame {

    int id = 0;
    DefaultTableModel dt = new DefaultTableModel();
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String sports = null;

    public member_sug() {
        initComponents();
        fillTable();
    }

    public ArrayList<MemberList> loadData() {
        ArrayList<MemberList> al = null;
        al = new ArrayList<MemberList>();
        try {
            DBConnection c = new DBConnection();
            Connection con = c.newDBConnection();
            System.out.println("Connection Established");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from member_sug");
            MemberList list;

            while (rs.next()) {
                list = new MemberList(rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7));
                al.add(list);

            }
        } catch (Exception e) {
            System.out.println("Error in Retrive Data : " + e);
        }
        return al;
    }

    public void fillTable() {
        ArrayList<MemberList> al = loadData();
        dt = (DefaultTableModel) member_list.getModel();
        dt.setRowCount(0);
        Object[] row = new Object[7];
        int j = 1;
        for (int i = 0; i < al.size(); i++) {
            row[0] = j;
            row[1] = al.get(i).getId();
            row[2] = al.get(i).getName();
            row[3] = al.get(i).getPhone();
            row[4] = al.get(i).getDob();
            row[5] = al.get(i).getBg();
            row[6] = al.get(i).getCtgry();
            j++;
            dt.addRow(row);

        }

    }

    public void showItemToFields(int index) throws ParseException {

        tf_name.setText(member_list.getModel().getValueAt(index, 2).toString());
        tf_phn.setText(member_list.getModel().getValueAt(index, 3).toString());
        cmb_bg.setSelectedItem(member_list.getModel().getValueAt(index, 5).toString());
        dc_dob.setDate(sdf.parse(member_list.getModel().getValueAt(index, 4).toString()));
        sports = (member_list.getModel().getValueAt(index, 6).toString());

        if (sports.contains("Foot")) {
            cb_fb.setSelected(true);
        } else {
            cb_fb.setSelected(false);
        }

        if (sports.contains("Cric")) {
            cb_ckt.setSelected(true);
        } else {
            cb_ckt.setSelected(false);
        }

        if (sports.contains("Voll")) {
            cb_vb.setSelected(true);
        } else {
            cb_vb.setSelected(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmb_bg = new javax.swing.JComboBox();
        dc_dob = new com.toedter.calendar.JDateChooser();
        cb_fb = new javax.swing.JCheckBox();
        cb_ckt = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        member_list = new javax.swing.JTable();
        cb_vb = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        bt_Accept = new javax.swing.JButton();
        bt_Deccline = new javax.swing.JButton();
        tf_name = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tf_phn = new javax.swing.JTextField();

        cmb_bg.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A+", "B+", "AB+", "O+", "A-", "B-", "AB-", "O-" }));

        dc_dob.setDateFormatString("dd/MM/yyyy");

        cb_fb.setText("FootBall");

        cb_ckt.setText("Cricket");

        member_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SL.NO", "Visitor", "Name", "Phone", "DOB", "BloodGroup", "Catagories"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        member_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                member_listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(member_list);
        if (member_list.getColumnModel().getColumnCount() > 0) {
            member_list.getColumnModel().getColumn(0).setPreferredWidth(5);
            member_list.getColumnModel().getColumn(1).setPreferredWidth(30);
            member_list.getColumnModel().getColumn(2).setPreferredWidth(30);
            member_list.getColumnModel().getColumn(3).setPreferredWidth(25);
            member_list.getColumnModel().getColumn(4).setPreferredWidth(15);
            member_list.getColumnModel().getColumn(5).setPreferredWidth(10);
            member_list.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        cb_vb.setText("VolleyBall");

        bt_Accept.setText("Accept");
        bt_Accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_AcceptActionPerformed(evt);
            }
        });

        bt_Deccline.setText("Deccline");
        bt_Deccline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_DecclineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_Accept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_Deccline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bt_Accept)
                .addGap(18, 18, 18)
                .addComponent(bt_Deccline)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setText("X");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_phn, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(tf_name))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmb_bg, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dc_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cb_fb, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(cb_ckt, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(cb_vb, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(34, 34, 34)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addGap(40, 40, 40)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tf_phn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dc_dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_fb)
                            .addComponent(cb_ckt)
                            .addComponent(cb_vb))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void member_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_member_listMouseClicked
        // TODO add your handling code here:
        id = 1;
        int ind = member_list.getSelectedRow();
        try {
            showItemToFields(ind);
        } catch (ParseException ex) {
            Logger.getLogger(member_sug.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_member_listMouseClicked

    private void bt_AcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_AcceptActionPerformed
        // TODO add your handling code for Update:

        if ((tf_name.getText().trim().isEmpty()) || (tf_phn.getText().trim().isEmpty())) {
            JOptionPane.showMessageDialog(null, "Select one from the Suggestions...");
        } else {

            try {
                DBConnection c = new DBConnection();
                try (Connection con = c.newDBConnection()) {
                    System.out.println("connection established");
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    String date = sdf.format(dc_dob.getDate());
                    PreparedStatement stmt = con.prepareStatement("insert into members(id,name,phone,dob,bg,sports) values(?,?,?,?,?,?)");
                    System.out.println("statement created");
                    stmt.setString(1, idget());
                    stmt.setString(2, tf_name.getText());
                    stmt.setString(3, tf_phn.getText());
                    stmt.setString(4, (date));
                    stmt.setString(5, (String) cmb_bg.getSelectedItem());
                    String sports = null;
                    if (cb_fb.isSelected()) {
                        if (sports == null) {
                            sports = "FootBall";
                        } else {
                            sports = sports + "FootBall";
                        }
                    }
                    if (cb_ckt.isSelected()) {
                        if (sports == null) {
                            sports = "Cricket";
                        } else {
                            sports = sports + ",Cricket";
                        }
                    }
                    if (cb_vb.isSelected()) {
                        if (sports == null) {
                            sports = "VolleyBall";
                        } else {
                            sports = sports + ",VolleyBall";
                        }
                    }
                    stmt.setString(6, sports);
                    System.out.println("statement created");
                    int res = stmt.executeUpdate();
                    if (res >= 1) {
                        JOptionPane.showMessageDialog(null, "Member Added Successfully...");
                        try {

                            String sql = "select * from admin where active=1";
                            PreparedStatement un = con.prepareStatement(sql);
                            ResultSet rs = un.executeQuery(sql);
                            String uname = "";
                            if (rs.next()) {
                                uname = rs.getString(3);
                            }
                            PreparedStatement pst = con.prepareStatement("insert into history values(?,?,?,?)");
                            pst.setString(1, uname);
                            pst.setString(2, tf_name.getText());
                            Date today = new Date();
                            pst.setString(3, sdf.format(today));
                            pst.setString(4, "Added");
                            System.out.println("statement created");
                            pst.executeUpdate();
                            deleteEntry();
                            fillTable();

                            con.close();
                            //this.setVisible(false);
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                        //tf_name.setText("");
                        //dt_chsr.setDate("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Something went Wrong...");
                    }
                    con.close();
                    this.dispose();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_bt_AcceptActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        /*DBConnection c=new DBConnection();
         Connection con=c.newDBConnection();
         String report = "D:\\N&N\\SportsClub\\SportsClub-master\\src\\sportsclub\\members.jrxml";
         try{
         JasperDesign jd = JRXmlLoader.load(report);
         JRDesignQuery newquery = new JRDesignQuery();
         String name= lbl_search.getText();
         newquery.setText("select * from members where name='"+name+"'");
         jd.setQuery(newquery);
         JasperReport jp = JasperCompileManager.compileReport(jd);
         System.out.println("Compiled...");
         JasperPrint jprint = JasperFillManager.fillReport(jp,null,con);
         JasperViewer.viewReport(jprint,false);
         }catch(Exception e){

         }*/
    }//GEN-LAST:event_jButton2ActionPerformed

    private void bt_DecclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_DecclineActionPerformed
        // TODO add your handling code for Delete:
        if (id == 0) {
            System.out.println("Select a member first...");
        } else {
            int opt = JOptionPane.showConfirmDialog(null, "Do you really want to Delete", "Delete", JOptionPane.YES_NO_OPTION);
            if (opt == 0) {
                deleteEntry();
                id = 0;
                fillTable();
            }
        }
    }//GEN-LAST:event_bt_DecclineActionPerformed

    public void deleteEntry() {
        try {
            String qry = "delete from member_sug where name=? and phone=? and dob=?";
            DBConnection c = new DBConnection();
            Connection con = c.newDBConnection();
            PreparedStatement ps = con.prepareStatement(qry);
            ps.setString(1, tf_name.getText());
            ps.setString(2, tf_phn.getText());
            ps.setString(3, sdf.format(dc_dob.getDate()));
            //ps.setString(4, (String) cmb_bg.getSelectedItem());
            //ps.setString(5, sports);
            //JOptionPane.showConfirmDialog(rootPane, closable);
            int res = ps.executeUpdate();
            if (res >= 1) {
                tf_name.setText("");
                tf_phn.setText("");
                cb_ckt.setSelected(false);
                cb_fb.setSelected(false);
                cb_vb.setSelected(false);
                cmb_bg.setSelectedIndex(0);
                dc_dob.setDate(null);
                id = 0;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "somthin...");
        }
    }

    private String idget() {
        int newid = 0;
        try {
            DBConnection c = new DBConnection();
            Connection con = c.newDBConnection();
            System.out.println("connection established");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select id from members");
            while (rs.next()) {
                String id[] = rs.getString(1).split("-");
                newid = Integer.parseInt(id[1]);;
            }
            if (newid == 0) {
                newid = 1;
            } else {
                newid++;
            }
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        return "M-" + newid;
    }

    /*private void clearFiels(){
     tf_name.setText("");
     tf_phn.setText("");
     dc_dob.setDate(null);
     cmb_bg.setSelectedIndex(0);
     cb_ckt.setSelected(false);
     cb_fb.setSelected(false);
     cb_vb.setSelected(false);
     }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Accept;
    private javax.swing.JButton bt_Deccline;
    private javax.swing.JCheckBox cb_ckt;
    private javax.swing.JCheckBox cb_fb;
    private javax.swing.JCheckBox cb_vb;
    private javax.swing.JComboBox cmb_bg;
    private com.toedter.calendar.JDateChooser dc_dob;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable member_list;
    private javax.swing.JTextField tf_name;
    private javax.swing.JTextField tf_phn;
    // End of variables declaration//GEN-END:variables
}
